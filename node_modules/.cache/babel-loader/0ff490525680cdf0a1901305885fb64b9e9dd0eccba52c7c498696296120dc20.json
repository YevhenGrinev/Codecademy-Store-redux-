{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijgrinev/Desktop/Codecadamy/projects/Codecademy Store/for github/src/features/cart/Cart.js\";\nimport React from 'react';\nimport { calculateTotal, getCurrencySymbol } from '../../utilities/utilities.js';\n\n// Import the changeItemQuantity() action creator.\nimport { changeItemQuantity } from './cartSlice.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Cart = props => {\n  const {\n    cart,\n    currencyFilter,\n    dispatch\n  } = props;\n  const onInputChangeHandler = (name, input) => {\n    // If the user enters a bad value...\n    if (input === '') {\n      return;\n    }\n\n    // Otherwise, convert the input into a number and pass it along as the newQuantity.\n    const newQuantity = Number(input);\n\n    // Dispatch an action to change the quantity of the given name and quantity.\n    dispatch(changeItemQuantity(name, newQuantity));\n  };\n\n  // Use the cart and currencyFilter slices to render their data.\n  const cartElements = [];\n  for (let item in cart) {\n    cartElements.push(createCartItem(item));\n  }\n  const total = calculateTotal(cart, currencyFilter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"cart-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"cart-items\",\n      children: cartElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"total\",\n      children: [\"Total\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"total-value\",\n        children: [getCurrencySymbol(currencyFilter), total, \" \", currencyFilter]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n  function createCartItem(name) {\n    const item = cart[name];\n    if (item.quantity === 0) {\n      return;\n    }\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"item-quantity\",\n        value: item.quantity,\n        onChange: e => {\n          onInputChangeHandler(name, e.target.value);\n        },\n        children: [...Array(100).keys()].map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: index\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","calculateTotal","getCurrencySymbol","changeItemQuantity","Cart","props","cart","currencyFilter","dispatch","onInputChangeHandler","name","input","newQuantity","Number","cartElements","item","push","createCartItem","total","quantity","e","target","value","Array","keys","map","_","index"],"sources":["/Users/evgenijgrinev/Desktop/Codecadamy/projects/Codecademy Store/for github/src/features/cart/Cart.js"],"sourcesContent":["import React from 'react';\nimport {\n  calculateTotal,\n  getCurrencySymbol,\n} from '../../utilities/utilities.js';\n\n// Import the changeItemQuantity() action creator.\nimport { changeItemQuantity } from './cartSlice.js'\n\nexport const Cart = (props) => {\n  const { cart, currencyFilter, dispatch } = props;\n\n  const onInputChangeHandler = (name, input) => {\n    // If the user enters a bad value...\n    if (input === '') {\n      return;\n    }\n\n    // Otherwise, convert the input into a number and pass it along as the newQuantity.\n    const newQuantity = Number(input);\n\n    // Dispatch an action to change the quantity of the given name and quantity.\n    dispatch(changeItemQuantity(name, newQuantity));\n\n  };\n\n  // Use the cart and currencyFilter slices to render their data.\n  const cartElements = [];\n  for (let item in cart) { \n    cartElements.push(createCartItem(item))\n  }\n  const total = calculateTotal(cart, currencyFilter);\n\n\n  return (\n    <div id=\"cart-container\">\n      <ul id=\"cart-items\">{cartElements}</ul>\n      <h3 className=\"total\">\n        Total{' '}\n        <span className=\"total-value\">\n          {getCurrencySymbol(currencyFilter)}{total} {currencyFilter}\n        </span>\n      </h3>\n    </div>\n  );\n\n  function createCartItem(name) {\n    const item = cart[name];\n\n    if (item.quantity === 0) {\n      return;\n    }\n\n    return (\n      <li key={name}>\n        <p>{name}</p>\n        <select\n          className=\"item-quantity\"\n          value={item.quantity}\n          onChange={(e) => {\n            onInputChangeHandler(name, e.target.value);\n          }}\n        >\n          {[...Array(100).keys()].map((_, index) => (\n            <option key={index} value={index}>\n              {index}\n            </option>\n          ))}\n        </select>\n      </li>\n    );\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,cAAc,EACdC,iBAAiB,QACZ,8BAA8B;;AAErC;AACA,SAASC,kBAAkB,QAAQ,gBAAgB;AAAA;AAEnD,OAAO,MAAMC,IAAI,GAAIC,KAAK,IAAK;EAC7B,MAAM;IAAEC,IAAI;IAAEC,cAAc;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAEhD,MAAMI,oBAAoB,GAAG,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC5C;IACA,IAAIA,KAAK,KAAK,EAAE,EAAE;MAChB;IACF;;IAEA;IACA,MAAMC,WAAW,GAAGC,MAAM,CAACF,KAAK,CAAC;;IAEjC;IACAH,QAAQ,CAACL,kBAAkB,CAACO,IAAI,EAAEE,WAAW,CAAC,CAAC;EAEjD,CAAC;;EAED;EACA,MAAME,YAAY,GAAG,EAAE;EACvB,KAAK,IAAIC,IAAI,IAAIT,IAAI,EAAE;IACrBQ,YAAY,CAACE,IAAI,CAACC,cAAc,CAACF,IAAI,CAAC,CAAC;EACzC;EACA,MAAMG,KAAK,GAAGjB,cAAc,CAACK,IAAI,EAAEC,cAAc,CAAC;EAGlD,oBACE;IAAK,EAAE,EAAC,gBAAgB;IAAA,wBACtB;MAAI,EAAE,EAAC,YAAY;MAAA,UAAEO;IAAY;MAAA;MAAA;MAAA;IAAA,QAAM,eACvC;MAAI,SAAS,EAAC,OAAO;MAAA,WAAC,OACf,EAAC,GAAG,eACT;QAAM,SAAS,EAAC,aAAa;QAAA,WAC1BZ,iBAAiB,CAACK,cAAc,CAAC,EAAEW,KAAK,EAAC,GAAC,EAACX,cAAc;MAAA;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;EAGR,SAASU,cAAc,CAACP,IAAI,EAAE;IAC5B,MAAMK,IAAI,GAAGT,IAAI,CAACI,IAAI,CAAC;IAEvB,IAAIK,IAAI,CAACI,QAAQ,KAAK,CAAC,EAAE;MACvB;IACF;IAEA,oBACE;MAAA,wBACE;QAAA,UAAIT;MAAI;QAAA;QAAA;QAAA;MAAA,QAAK,eACb;QACE,SAAS,EAAC,eAAe;QACzB,KAAK,EAAEK,IAAI,CAACI,QAAS;QACrB,QAAQ,EAAGC,CAAC,IAAK;UACfX,oBAAoB,CAACC,IAAI,EAAEU,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;QAC5C,CAAE;QAAA,UAED,CAAC,GAAGC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,kBACnC;UAAoB,KAAK,EAAEA,KAAM;UAAA,UAC9BA;QAAK,GADKA,KAAK;UAAA;UAAA;UAAA;QAAA,QAGnB;MAAC;QAAA;QAAA;QAAA;MAAA,QACK;IAAA,GAdFjB,IAAI;MAAA;MAAA;MAAA;IAAA,QAeR;EAET;AACF,CAAC;AAAC,KA/DWN,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}